// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onepassword
{
    public static class GetItem
    {
        public static Task<GetItemResult> InvokeAsync(GetItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetItemResult>("onepassword:index/getItem:getItem", args ?? new GetItemArgs(), options.WithDefaults());

        public static Output<GetItemResult> Invoke(GetItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetItemResult>("onepassword:index/getItem:getItem", args ?? new GetItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetItemArgs : global::Pulumi.InvokeArgs
    {
        [Input("files")]
        private List<Inputs.GetItemFileArgs>? _files;
        public List<Inputs.GetItemFileArgs> Files
        {
            get => _files ?? (_files = new List<Inputs.GetItemFileArgs>());
            set => _files = value;
        }

        [Input("noteValue")]
        private string? _noteValue;
        public string? NoteValue
        {
            get => _noteValue;
            set => _noteValue = value;
        }

        [Input("sections")]
        private List<Inputs.GetItemSectionArgs>? _sections;
        public List<Inputs.GetItemSectionArgs> Sections
        {
            get => _sections ?? (_sections = new List<Inputs.GetItemSectionArgs>());
            set => _sections = value;
        }

        [Input("title")]
        public string? Title { get; set; }

        [Input("uuid")]
        public string? Uuid { get; set; }

        [Input("vault", required: true)]
        public string Vault { get; set; } = null!;

        public GetItemArgs()
        {
        }
        public static new GetItemArgs Empty => new GetItemArgs();
    }

    public sealed class GetItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("files")]
        private InputList<Inputs.GetItemFileInputArgs>? _files;
        public InputList<Inputs.GetItemFileInputArgs> Files
        {
            get => _files ?? (_files = new InputList<Inputs.GetItemFileInputArgs>());
            set => _files = value;
        }

        [Input("noteValue")]
        private Input<string>? _noteValue;
        public Input<string>? NoteValue
        {
            get => _noteValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _noteValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sections")]
        private InputList<Inputs.GetItemSectionInputArgs>? _sections;
        public InputList<Inputs.GetItemSectionInputArgs> Sections
        {
            get => _sections ?? (_sections = new InputList<Inputs.GetItemSectionInputArgs>());
            set => _sections = value;
        }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        [Input("vault", required: true)]
        public Input<string> Vault { get; set; } = null!;

        public GetItemInvokeArgs()
        {
        }
        public static new GetItemInvokeArgs Empty => new GetItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetItemResult
    {
        public readonly string Category;
        public readonly string Credential;
        public readonly string Database;
        public readonly ImmutableArray<Outputs.GetItemFileResult> Files;
        public readonly string Hostname;
        public readonly string Id;
        public readonly string NoteValue;
        public readonly string Password;
        public readonly string Port;
        public readonly string PrivateKey;
        public readonly string PublicKey;
        public readonly ImmutableArray<Outputs.GetItemSectionResult> Sections;
        public readonly ImmutableArray<string> Tags;
        public readonly string Title;
        public readonly string Type;
        public readonly string Url;
        public readonly string Username;
        public readonly string Uuid;
        public readonly string Vault;

        [OutputConstructor]
        private GetItemResult(
            string category,

            string credential,

            string database,

            ImmutableArray<Outputs.GetItemFileResult> files,

            string hostname,

            string id,

            string noteValue,

            string password,

            string port,

            string privateKey,

            string publicKey,

            ImmutableArray<Outputs.GetItemSectionResult> sections,

            ImmutableArray<string> tags,

            string title,

            string type,

            string url,

            string username,

            string uuid,

            string vault)
        {
            Category = category;
            Credential = credential;
            Database = database;
            Files = files;
            Hostname = hostname;
            Id = id;
            NoteValue = noteValue;
            Password = password;
            Port = port;
            PrivateKey = privateKey;
            PublicKey = publicKey;
            Sections = sections;
            Tags = tags;
            Title = title;
            Type = type;
            Url = url;
            Username = username;
            Uuid = uuid;
            Vault = vault;
        }
    }
}
