// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("onepassword");

/**
 * A valid account's sign-in address or ID to use biometrics unlock. Can also be sourced from `OP_ACCOUNT` environment
 * variable. Provider will use the 1Password CLI if set.
 */
export declare const account: string | undefined;
Object.defineProperty(exports, "account", {
    get() {
        return __config.get("account");
    },
    enumerable: true,
});

/**
 * The path to the 1Password CLI binary. Can also be sourced from `OP_CLI_PATH` environment variable. Defaults to `op`.
 */
export declare const opCliPath: string | undefined;
Object.defineProperty(exports, "opCliPath", {
    get() {
        return __config.get("opCliPath");
    },
    enumerable: true,
});

/**
 * A valid 1Password service account token. Can also be sourced from `OP_SERVICE_ACCOUNT_TOKEN` environment variable.
 * Provider will use the 1Password CLI if set.
 */
export declare const serviceAccountToken: string | undefined;
Object.defineProperty(exports, "serviceAccountToken", {
    get() {
        return __config.get("serviceAccountToken");
    },
    enumerable: true,
});

/**
 * A valid token for your 1Password Connect server. Can also be sourced from `OP_CONNECT_TOKEN` environment variable.
 * Provider will use 1Password Connect server if set.
 */
export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

/**
 * The HTTP(S) URL where your 1Password Connect server can be found. Can also be sourced `OP_CONNECT_HOST` environment
 * variable. Provider will use 1Password Connect server if set.
 */
export declare const url: string | undefined;
Object.defineProperty(exports, "url", {
    get() {
        return __config.get("url");
    },
    enumerable: true,
});

